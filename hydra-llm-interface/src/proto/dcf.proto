
syntax = "proto3";

package dcf;

service DCFService {
  rpc SendMessage (DCFMessage) returns (DCFMessageResponse);
  rpc ReceiveStream (Empty) returns (stream DCFMessage);
  rpc HealthCheck (HealthRequest) returns (HealthResponse);
}

service DCFMasterService {
  rpc AssignRole (MasterCommand) returns (Empty);
  rpc UpdateConfig (MasterCommand) returns (Empty);
  rpc CollectMetrics (Empty) returns (Metrics);
  rpc ReceiveCommands (Empty) returns (stream MasterCommand);
  rpc OptimizeNetwork (Empty) returns (Empty);
}

message DCFMessage {
  string sender = 1;
  string recipient = 2;
  oneof data {
    string text_data = 3;
    bytes binary_data = 4;
  }
  int64 timestamp = 5;
  bool sync = 6;
  uint32 sequence = 7;
  string redundancy_path = 8;
  string group_id = 9;
}

message DCFMessageResponse {
  string data = 1;
}

message HealthRequest {
  string peer = 1;
}

message HealthResponse {
  bool healthy = 1;
  string status = 2;
  int32 rtt = 3;
}

message MasterCommand {
  string command = 1;
  string peer = 2;
  string role = 3;
  string key = 4;
  string value = 5;
}

message Metrics {
  string node_id = 1;
  repeated RTT rtts = 2;
  repeated Group groups = 3;
}

message RTT {
  string peer = 1;
  int32 rtt = 2;
}

message Group {
  string group_id = 1;
  repeated string peers = 2;
}

message Empty {}
